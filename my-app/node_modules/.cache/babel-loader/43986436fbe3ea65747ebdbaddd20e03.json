{"ast":null,"code":"var _jsxFileName = \"/Users/han/Desktop/React/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [checked, setChecked] = useState(flase);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: checked,\n      onChange: () => setChecked(checked => !checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Checked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+MTTTsUWkxENLpMbXcdPgfzVvhA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","checked","setChecked","flase"],"sources":["/Users/han/Desktop/React/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [checked, setChecked] = useState(flase);\n  return (\n    <div className=\"App\">\n      <input \n      type = \"checkbox\" \n      value={checked} \n      onChange={() =>\n        setChecked((checked) => !checked)\n      }\n      />\n      <label>\n        Checked\n      </label>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAACI,KAAD,CAAtC;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MACA,IAAI,EAAG,UADP;MAEA,KAAK,EAAEF,OAFP;MAGA,QAAQ,EAAE,MACRC,UAAU,CAAED,OAAD,IAAa,CAACA,OAAf;IAJZ;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAhBQD,G;;KAAAA,G;AAkBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}